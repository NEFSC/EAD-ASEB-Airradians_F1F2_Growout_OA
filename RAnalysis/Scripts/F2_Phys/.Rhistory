library(lsmeans)
library(lsmeans)
# library(lsmeans)
m.interaction <- lm(log10_Length ~ log10_Gonad*pCO2, data = LogDryGonadvShell)
anova(m.interaction)
# Obtain slopes
m.interaction$coefficients
m.lst <- lstrends(m.interaction, "pCO2", var="log10_Gonad")
h
# call dataset - omit data without gonad weights
F1_DryGonad <- F1_dryweights_calc %>%
dplyr::select(Age, pCO2, Tank_Replicate, Dry_Gonad_weight_g, Shell_length_mm) %>%
na.omit()
# call the mean gonad dry weight
meanLength.all <- mean(as.numeric((F1_DryGonad %>% dplyr::filter(!Dry_Gonad_weight_g  == 0))$Shell_length_mm))# 29.91838
seLength.all   <- sd(F1_DryGonad$Shell_length_mm)/sqrt(length((F1_DryGonad$Shell_length_mm))) # 0.4576706
StandardShellSize = 40
# age range of animals
print(paste0('youngest = ', min(F1_DryGonad$Age), '; oldest = ', max(F1_DryGonad$Age)))
#assign bfactors
bLength.all <-  4.62 #mean data by rep tank # 6.89 - will all data
bLength.low <-  4.98 #mean data by rep tank # 6.99 - with all data
bLength.mod <-  4.29 #mean data by rep tank # 6.57 - with all data
# standardize gonad dry weight using bfactors
## follow the equation for scaling weights to length inbivalves
### a = (weight of indiv / (height of indivisual)^bfactor )
### standardized weight == [a * (standard height)^bfactor ] *100
### /note: stnadard height is the mean of all individuals measured
F1_DryGonad.bfactor <- F1_DryGonad %>%
dplyr::mutate(
# Gonad_bFactorLength.all_EQ = ( (Dry_Gonad_weight_g / (Shell_length_mm^bLength.all) )*100 ),
Gonad_bFactorLength.all  =  ( (Dry_Gonad_weight_g * (Shell_length_mm^-bLength.all)) * # == a,  mass index Bonardelli and Himmelman 1995
(StandardShellSize^bLength.all) )*100, # multiplied by the mean length as the standard raised to the b factor
Gonad_bFactorLength.pCO2 =  case_when(pCO2 == '500 μatm' ~
( (Dry_Gonad_weight_g * (Shell_length_mm^-bLength.low)) * # == a,  mass index Bonardelli and Himmelman 1995
(StandardShellSize^bLength.low) )*100, # multiplied by the mean length as the standard raised to the b factor
pCO2 == '800 μatm' ~
( (Dry_Gonad_weight_g * (Shell_length_mm^-bLength.mod))* # == a,  mass index Bonardelli and Himmelman 1995
(StandardShellSize^bLength.mod) )*100 # multiplied by the mean length as the standard raised to the b factor
) # case when for pCO2
) # mutate
# pivot longer and plot
F1_DryGonad.bfactor.long <- F1_DryGonad.bfactor %>%
dplyr::select(-Shell_length_mm) %>%
tidyr::pivot_longer(
cols = c(Dry_Gonad_weight_g, Gonad_bFactorLength.all, Gonad_bFactorLength.pCO2),
names_to = "measurement",
values_to = "value"
)
# means by replicate tank
F1_DryGonad.bfactor.long.MEANS <- F1_DryGonad.bfactor.long %>%
summarySE(measurevar="value",
groupvars=c("Age","pCO2", "Tank_Replicate", "measurement")) %>%
dplyr::arrange(as.numeric(Age))
# mmeans master - median for E-H as A-D!
F1_DryGonad.bfactor.long.MEANS_master <- F1_DryGonad.bfactor.long.MEANS %>%  # noew convert and resummarize by tank
dplyr::mutate(Tank_Replicate = case_when(
Tank_Replicate == 'E' ~ 'A', #convert E to A
Tank_Replicate == 'F' ~ 'B', #convert F to B
Tank_Replicate == 'G' ~ 'C', #convert G to C
Tank_Replicate == 'H' ~ 'D', #convert H to D
.default = (as.character(Tank_Replicate)) # for cases A-D, keep em my mans
)) %>%
summarySE(measurevar="value",
groupvars=c("Age","pCO2", "Tank_Replicate", "measurement")) %>% # summarize again
dplyr::arrange(as.numeric(Age), measurement, pCO2, Tank_Replicate)
#
Gonad_bfactor.MeanSE <-ggplot(F1_DryGonad.bfactor.long.MEANS_master,
aes(x=factor(Age),
y=value,
colour=factor(pCO2)),
stat="identity") +
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
geom_point(aes(colour = pCO2),
position = position_dodge2(width = 0.5)) +
stat_summary(fun.y="mean", size = 0.8,
position = position_dodge2(width = 0.5)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 0.5)) +
labs(title="Mean + SE data",
x ="Age (dpf)",
y = "value") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.title.y=element_blank(),
# axis.title.x=element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none") +
facet_wrap(~measurement, scales = "free_y")
Gonad_final_plot <- F1_DryGonad.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Gonad_bFactorLength.pCO2') %>%
ggplot(aes(x=factor(Age), y=value, colour=factor(pCO2)),stat="identity") +
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
stat_summary(fun.y="mean", size = 0.8,
position = position_dodge2(width = 0.25)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 0.5)) +
labs(title="Gonad: Length b factor pCO2", x ="Age (dpf)", y = "Dry gonad (mg Lengthbfactor_pCO2)") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none")
Gonad_final_plot
# b factor for Somatic?
LogDrySomaticvShell <- F1_dryweights_calc.long.MEANS_master %>%
dplyr::filter(measurement %in% c('Dry_Somatic_Tissue_g', 'Shell_length_mm')) %>%
# dplyr::group_by(measurement) %>%
tidyr::pivot_wider(
names_from = measurement,
values_from = value
) %>%
# dplyr::select(-row) %>%
dplyr::group_by(Age, pCO2, Tank_Replicate) %>%
dplyr::mutate(log10_Somatic   = log10(Dry_Somatic_Tissue_g),
log10_Length = log10(Shell_length_mm)) %>%
na.omit() %>% # we only have somatic for later life stage - omit rows without it
dplyr::filter(!log10_Somatic %in% '-Inf') # ommit instances when somatic weight == 0
bfactorSomatic.Length.pCO2 <- LogDrySomaticvShell %>% ggplot(aes(x=log10_Length, y=log10_Somatic, color = pCO2)) +
geom_point() +
ggpmisc::stat_ma_line(method = "SMA") + # model 2 regression Standard major axis!
ggpmisc::stat_ma_eq(use_label(c("eq", "n", "R2"))) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_Somatic; in g)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Somatic scaling: log10_Somatic = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red') +
# ggpmisc::stat_poly_eq(parse=T,
#                       aes(label = paste(..eq.label.., ..rr.label..,
#                                       sep = "~~~")),
#                          label.x.npc = "left") +
facet_wrap(~pCO2)
bfactorSomatic.Length.all <- LogDrySomaticvShell %>% ggplot(aes(x=log10_Length, y=log10_Somatic)) +
geom_point() +
ggpmisc::stat_ma_line(method = "SMA") + # model 2 regression Standard major axis!
ggpmisc::stat_ma_eq(use_label(c("eq", "n", "R2"))) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_Somatic; in g") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Somatic scaling: log10_Somatic = log10_a +
(b.factor * log10_Length)")# +
# geom_smooth(method = lm, color = 'red') +
# ggpmisc::stat_poly_eq(parse=T,
#                       aes(label = paste(..eq.label.., ..rr.label..,
#                                       sep = "~~~")),
#                          label.x.npc = "left")
# call dataset - omit data without Somatic weights
F1_DrySomatic <- F1_dryweights_calc %>%
dplyr::select(Age, pCO2, Tank_Replicate, Dry_Somatic_Tissue_g, Shell_length_mm) %>%
na.omit()
# call the mean Somatic dry weight
meanLength.all <- mean(F1_DrySomatic$Shell_length_mm) # 27.44867
seLength.all   <- sd(F1_DrySomatic$Shell_length_mm)/sqrt(length((F1_DrySomatic$Shell_length_mm))) # 0.5550621
StandardShellSize = 40
# age range of animals
print(paste0('youngest = ', min(F1_DrySomatic$Age), '; oldest = ', max(F1_DrySomatic$Age)))
#assign bfactors
bLength.all <- 3.25 #2.96
bLength.low <- 3.27 #2.97
bLength.mod <- 3.23 #2.97
# standardize Somatic dry weight using bfactors
F1_DrySomatic.bfactor <- F1_DrySomatic %>%
dplyr::mutate(
Somatic_bFactorLength.all  =  ( (Dry_Somatic_Tissue_g * (Shell_length_mm^-bLength.all))* # a
(StandardShellSize^bLength.all) ) * 100,
Somatic_bFactorLength.pCO2 =  case_when(pCO2 == '500 μatm' ~
( (Dry_Somatic_Tissue_g * (Shell_length_mm^-bLength.low))* # a
(StandardShellSize^bLength.low) ) * 100,
pCO2 == '800 μatm' ~
( (Dry_Somatic_Tissue_g * (Shell_length_mm^-bLength.mod))* # a
(StandardShellSize^bLength.mod) ) * 100
) # case when for pCO2
) # mutate
# pivot longer and plot
F1_DrySomatic.bfactor.long <- F1_DrySomatic.bfactor %>%
dplyr::select(-Shell_length_mm) %>%
tidyr::pivot_longer(
cols = c(Dry_Somatic_Tissue_g, Somatic_bFactorLength.all, Somatic_bFactorLength.pCO2),
names_to = "measurement",
values_to = "value"
)
# means by replicate tank
F1_DrySomatic.bfactor.long.MEANS <- F1_DrySomatic.bfactor.long %>%
summarySE(measurevar="value",
groupvars=c("Age","pCO2", "Tank_Replicate", "measurement")) %>%
dplyr::arrange(as.numeric(Age))
# mmeans master - median for E-H as A-D!
F1_DrySomatic.bfactor.long.MEANS_master <- F1_DrySomatic.bfactor.long.MEANS %>%  # noew convert and resummarize by tank
dplyr::mutate(Tank_Replicate = case_when(
Tank_Replicate == 'E' ~ 'A', #convert E to A
Tank_Replicate == 'F' ~ 'B', #convert F to B
Tank_Replicate == 'G' ~ 'C', #convert G to C
Tank_Replicate == 'H' ~ 'D', #convert H to D
.default = (as.character(Tank_Replicate)) # for cases A-D, keep em my mans
)) %>%
summarySE(measurevar="value",
groupvars=c("Age","pCO2", "Tank_Replicate", "measurement")) %>% # summarize again
dplyr::arrange(as.numeric(Age), measurement, pCO2, Tank_Replicate)
Somatic_bfactor.MeanSE <-ggplot(F1_DrySomatic.bfactor.long.MEANS_master,
aes(x=factor(Age),
y=value,
colour=factor(pCO2)),
stat="identity") +
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
geom_point(aes(colour = pCO2),
position = position_dodge2(width = 0.5)) +
stat_summary(fun.y="mean", size = 0.8,
position = position_dodge2(width = 0.5)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 0.5)) +
labs(title="Mean + SE data",
x ="Age (dpf)",
y = "value") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.title.y=element_blank(),
# axis.title.x=element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none") +
facet_wrap(~measurement, scales = "free_y")
pdf("Output/DryWeights/F1/length_scaling/Dry_Somatic_byLength.pdf", height=8, width =8)
Somatic_final_plot <- F1_DrySomatic.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Somatic_bFactorLength.pCO2') %>%
ggplot(aes(x=factor(Age), y=value, colour=factor(pCO2)),stat="identity") +
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
stat_summary(fun.y="mean", size = 0.8,
position = position_dodge2(width = 0.25)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 0.5)) +
labs(title="Somatic: Length b factor pCO2", x ="Age (dpf)", y = "Dry Somatic (mg Lengthbfactor_pCO2)") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none")
Somatic_final_plot
F1_DrySomatic.raw.MEAN <- F1_DrySomatic.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Dry_Somatic_Tissue_g')
F1_DrySomatic.raw.MEAN$DPvar    <- F1_DrySomatic.raw.MEAN$value
F1_DrySomatic.raw.MEAN$INDvar   <- F1_DrySomatic.raw.MEAN$pCO2
F1_DrySomatic.raw.MEAN$GROUPvar <- F1_DrySomatic.raw.MEAN$Age
Stats_SomaticMEAN_raw <- as.data.frame(runstats(F1_DrySomatic.raw.MEAN))
Ttest_SomaticMEAN_raw <- as.data.frame(run_ttest(F1_DrySomatic.raw.MEAN))
# About column
Stats_SomaticMEAN_raw$About <- paste0("Somatic: raw, NO BFACTOR + mean data")
Ttest_SomaticMEAN_raw$About <- paste0("Somatic: raw, NO BFACTOR + mean data")
F1_DrySomatic.bfactor.MEAN <- F1_DrySomatic.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Somatic_bFactorLength.all')
F1_DrySomatic.bfactor.MEAN$DPvar    <- F1_DrySomatic.bfactor.MEAN$value
F1_DrySomatic.bfactor.MEAN$INDvar   <- F1_DrySomatic.bfactor.MEAN$pCO2
F1_DrySomatic.bfactor.MEAN$GROUPvar <- F1_DrySomatic.bfactor.MEAN$Age
Stats_SomaticMEAN_bfactor.all <- as.data.frame(runstats(F1_DrySomatic.bfactor.MEAN))
Ttest_SomaticMEAN_bfactor.all <- as.data.frame(run_ttest(F1_DrySomatic.bfactor.MEAN))
# About column
Stats_SomaticMEAN_bfactor.all$About <- paste0("Somatic: one bfactor + mean data")
Ttest_SomaticMEAN_bfactor.all$About <- paste0("Somatic: one bfactor + mean data")
# means by replicate tank within treamtent and day/age
F1_DrySomatic.bfactor.MEAN <- F1_DrySomatic.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Somatic_bFactorLength.pCO2')
F1_DrySomatic.bfactor.MEAN$DPvar    <- F1_DrySomatic.bfactor.MEAN$value
F1_DrySomatic.bfactor.MEAN$INDvar   <- F1_DrySomatic.bfactor.MEAN$pCO2
F1_DrySomatic.bfactor.MEAN$GROUPvar <- F1_DrySomatic.bfactor.MEAN$Age
Stats_SomaticMEAN_bfactor.pCO2 <- as.data.frame(runstats(F1_DrySomatic.bfactor.MEAN))
Ttest_SomaticMEAN_bfactor.pCO2 <- as.data.frame(run_ttest(F1_DrySomatic.bfactor.MEAN))
# About column
Stats_SomaticMEAN_bfactor.pCO2$About <- paste0("Somatic: two pCO2 bfactors + mean data")
Ttest_SomaticMEAN_bfactor.pCO2$About <- paste0("Somatic: two pCO2 bfactors + mean data")
SomaticMaster_Ttest <- rbind(Ttest_SomaticMEAN_raw, Ttest_SomaticMEAN_bfactor.all, Ttest_SomaticMEAN_bfactor.pCO2)
write.csv(SomaticMaster_Ttest, "Output/DryWeights/F1/F1_Somatic_DryWeight_Ttest_table.csv")
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Airradians_F1F2_Growout_OA/RAnalysis")
write.csv(SomaticMaster_Ttest, "Output/DryWeights/F1/F1_Somatic_DryWeight_Ttest_table.csv")
# b factor for Shell?
LogDryTissue <- F1_dryweights_calc.long.MEANS_master %>%
dplyr::filter(measurement %in% c('Dry_Shell_weight_g', 'Shell_length_mm')) %>%
# dplyr::group_by(measurement) %>%
tidyr::pivot_wider(
names_from = measurement,
values_from = value
) %>%
# dplyr::select(-row) %>%
dplyr::group_by(Age, pCO2, Tank_Replicate) %>%
dplyr::mutate(log10_Shell   = log10(Dry_Shell_weight_g),
log10_Length = log10(Shell_length_mm)) %>%
na.omit() %>% # we only have shell for later life stage - omit rows without it
dplyr::filter(!log10_Shell %in% '-Inf') # ommit instances when shell weight == 0
bfactorShell.Length.pCO2 <- LogDryTissue %>% ggplot(aes(x=log10_Length, y=log10_Shell, color = pCO2)) +
geom_point() +
ggpmisc::stat_ma_line(method = "SMA") + # model 2 regression Standard major axis!
ggpmisc::stat_ma_eq(use_label(c("eq", "n", "R2"))) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_Shell; in g)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Shell scaling: log10_Shell = log10_a +
(b.factor * log10_Length)") +
# geom_smooth(method = lm, color = 'red') +
# ggpmisc::stat_poly_eq(parse=T,
#                       aes(label = paste(..eq.label.., ..rr.label..,
#                                       sep = "~~~")),
#                          label.x.npc = "left") +
facet_wrap(~pCO2)
bfactorShell.Length.all <- LogDryTissue %>% ggplot(aes(x=log10_Length, y=log10_Shell)) +
geom_point() +
ggpmisc::stat_ma_line(method = "SMA") + # model 2 regression Standard major axis!
ggpmisc::stat_ma_eq(use_label(c("eq", "n", "R2"))) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_Length; in mm") +
scale_y_continuous(name ="log10_Shell; in g") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Shell scaling: log10_Shell = log10_a +
(b.factor * log10_Length)") +
geom_smooth(method = lm, color = 'red')# +
# ggpmisc::stat_poly_eq(parse=T,
#                       aes(label = paste(..eq.label.., ..rr.label..,
#                                       sep = "~~~")),
#                          label.x.npc = "left")
# call dataset - omit data without Shell weights
F1_DryShell <- F1_dryweights_calc %>%
dplyr::select(Age, pCO2, Tank_Replicate, Dry_Shell_weight_g, Shell_length_mm) %>%
na.omit()
# call the mean Shell dry weight
meanLength.all <- mean(F1_DryShell$Shell_length_mm) # 21.93231
seLength.all   <- sd(F1_DryShell$Shell_length_mm)/sqrt(length((F1_DryShell$Shell_length_mm))) # 0.3850383
StandardShellSize = 40
# age range of animals
print(paste0('youngest = ', min(F1_DryShell$Age), '; oldest = ', max(F1_DryShell$Age)))
#assign bfactors
bLength.all <- 2.92 #3.11
bLength.low <- 2.91#3.13
bLength.mod <- 2.92#3.10
# standardize Shell dry weight using bfactors
F1_DryShell.bfactor <- F1_DryShell %>%
dplyr::mutate(
Shell_bFactorLength.all  =  ( (Dry_Shell_weight_g * (Shell_length_mm^-bLength.all))* # a
(StandardShellSize^bLength.all) ) * 100,
Shell_bFactorLength.pCO2 =  case_when(pCO2 == '500 μatm' ~
( (Dry_Shell_weight_g * (Shell_length_mm^-bLength.low))* # a
(StandardShellSize^bLength.low) ) * 100,
pCO2 == '800 μatm' ~
( (Dry_Shell_weight_g * (Shell_length_mm^-bLength.mod))* # a
(StandardShellSize^bLength.mod) ) * 100
) # case when for pCO2
) # mutate
# pivot longer and plot
F1_DryShell.bfactor.long <- F1_DryShell.bfactor %>%
dplyr::select(-Shell_length_mm) %>%
tidyr::pivot_longer(
cols = c(Dry_Shell_weight_g, Shell_bFactorLength.all, Shell_bFactorLength.pCO2),
names_to = "measurement",
values_to = "value"
)
# means by replicate tank
F1_DryShell.bfactor.long.MEANS <- F1_DryShell.bfactor.long %>%
summarySE(measurevar="value",
groupvars=c("Age","pCO2", "Tank_Replicate", "measurement")) %>%
dplyr::arrange(as.numeric(Age))
# mmeans master - median for E-H as A-D!
F1_DryShell.bfactor.long.MEANS_master <- F1_DryShell.bfactor.long.MEANS %>%  # noew convert and resummarize by tank
dplyr::mutate(Tank_Replicate = case_when(
Tank_Replicate == 'E' ~ 'A', #convert E to A
Tank_Replicate == 'F' ~ 'B', #convert F to B
Tank_Replicate == 'G' ~ 'C', #convert G to C
Tank_Replicate == 'H' ~ 'D', #convert H to D
.default = (as.character(Tank_Replicate)) # for cases A-D, keep em my mans
)) %>%
summarySE(measurevar="value",
groupvars=c("Age","pCO2", "Tank_Replicate", "measurement")) %>% # summarize again
dplyr::arrange(as.numeric(Age), measurement, pCO2, Tank_Replicate)
#
Shell_bfactor.MeanSE <-ggplot(F1_DryShell.bfactor.long.MEANS_master,
aes(x=factor(Age),
y=value,
colour=factor(pCO2)),
stat="identity") +
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
geom_point(aes(colour = pCO2),
position = position_dodge2(width = 0.5)) +
stat_summary(fun.y="mean", size = 0.8,
position = position_dodge2(width = 0.5)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 0.5)) +
labs(title="Mean + SE data",
x ="Age (dpf)",
y = "value") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.title.y=element_blank(),
# axis.title.x=element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none") +
facet_wrap(~measurement, scales = "free_y")
pdf("Output/DryWeights/F1/length_scaling/Dry_Shell_byLength.pdf", height=8, width =8)
ggarrange(bfactorShell.Length.all, bfactorShell.Length.pCO2,Shell_bfactor.MeanSE, nrow=3)
dev.off()
Shell_final_plot <- F1_DryShell.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Shell_bFactorLength.pCO2') %>%
ggplot(aes(x=factor(Age), y=value, colour=factor(pCO2)),stat="identity") +
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
stat_summary(fun.y="mean", size = 0.8,
position = position_dodge2(width = 0.25)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 0.5)) +
labs(title="Shell: Length b factor pCO2", x ="Age (dpf)", y = "Dry Shell (mg Lengthbfactor_all)") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none")
Shell_final_plot_SUBSET <- F1_DryShell.bfactor.long.MEANS_master %>%
dplyr::filter(Age >= 233 & measurement %in% 'Shell_bFactorLength.pCO2') %>%
ggplot(aes(x=factor(Age), y=value, colour=factor(pCO2)),stat="identity") +
scale_colour_manual(breaks=c("500 μatm", "800 μatm"),
values=c("forestgreen","darkorange2")) +
stat_summary(fun.y="mean", size = 0.8,
position = position_dodge2(width = 0.25)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 0.5)) +
labs(title="Shell: Length b factor pCO2", x ="Age (dpf)", y = "Dry Shell (mg Lengthbfactor_all)") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none")
F1_DryShell.raw.MEAN <- F1_DryShell.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Dry_Shell_weight_g')
F1_DryShell.raw.MEAN$DPvar    <- F1_DryShell.raw.MEAN$value
F1_DryShell.raw.MEAN$INDvar   <- F1_DryShell.raw.MEAN$pCO2
F1_DryShell.raw.MEAN$GROUPvar <- F1_DryShell.raw.MEAN$Age
Stats_ShellMEAN_raw <- as.data.frame(runstats(F1_DryShell.raw.MEAN))
Ttest_ShellMEAN_raw <- as.data.frame(run_ttest(F1_DryShell.raw.MEAN))
# About column
Stats_ShellMEAN_raw$About <- paste0("Shell: raw, NO BFACTOR + mean data")
Ttest_ShellMEAN_raw$About <- paste0("Shell: raw, NO BFACTOR + mean data")
F1_DryShell.bfactor.MEAN <- F1_DryShell.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Shell_bFactorLength.all')
F1_DryShell.bfactor.MEAN$DPvar    <- F1_DryShell.bfactor.MEAN$value
F1_DryShell.bfactor.MEAN$INDvar   <- F1_DryShell.bfactor.MEAN$pCO2
F1_DryShell.bfactor.MEAN$GROUPvar <- F1_DryShell.bfactor.MEAN$Age
Stats_ShellMEAN_bfactor.all <- as.data.frame(runstats(F1_DryShell.bfactor.MEAN))
Ttest_ShellMEAN_bfactor.all <- as.data.frame(run_ttest(F1_DryShell.bfactor.MEAN))
# About column
Stats_ShellMEAN_bfactor.all$About <- paste0("Shell: one bfactor + mean data")
Ttest_ShellMEAN_bfactor.all$About <- paste0("Shell: one bfactor + mean data")
# means by replicate tank within treamtent and day/age
F1_DryShell.bfactor.MEAN <- F1_DryShell.bfactor.long.MEANS_master %>%
dplyr::filter(measurement %in% 'Shell_bFactorLength.pCO2')
F1_DryShell.bfactor.MEAN$DPvar    <- F1_DryShell.bfactor.MEAN$value
F1_DryShell.bfactor.MEAN$INDvar   <- F1_DryShell.bfactor.MEAN$pCO2
F1_DryShell.bfactor.MEAN$GROUPvar <- F1_DryShell.bfactor.MEAN$Age
Stats_ShellMEAN_bfactor.pCO2 <- as.data.frame(runstats(F1_DryShell.bfactor.MEAN))
Ttest_ShellMEAN_bfactor.pCO2 <- as.data.frame(run_ttest(F1_DryShell.bfactor.MEAN))
# About column
Stats_ShellMEAN_bfactor.pCO2$About <- paste0("Shell: two pCO2 bfactors + mean data")
Ttest_ShellMEAN_bfactor.pCO2$About <- paste0("Shell: two pCO2 bfactors + mean data")
ShellMaster_Ttest <- rbind(Ttest_ShellMEAN_raw, Ttest_ShellMEAN_bfactor.all, Ttest_ShellMEAN_bfactor.pCO2)
write.csv(ShellMaster_Ttest, "Output/DryWeights/F1/F1_Shell_DryWeight_Ttest_table.csv")
